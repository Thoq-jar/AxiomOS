<script lang="js">
    document.addEventListener("DOMContentLoaded", () => {
        const terminal = document.getElementById("terminal-output");
        const commandHistory = [];
        let historyIndex = -1;

        document.getElementById("commandBar").addEventListener("keydown", (event) => {
            if (event.key === "Enter") {
                const command = event.target.value;
                appendToTerminal(`$ ${command}`);
                runCommand(command);
                commandHistory.push(command);
                historyIndex = commandHistory.length;
            } else if (event.key === "ArrowUp") {
                event.preventDefault();
                if (historyIndex > 0) {
                    historyIndex--;
                    event.target.value = commandHistory[historyIndex];
                }
            } else if (event.key === "ArrowDown") {
                event.preventDefault();
                if (historyIndex < commandHistory.length - 1) {
                    historyIndex++;
                    event.target.value = commandHistory[historyIndex];
                }
            }
        });

        function appendToTerminal(text) {
            const line = document.createElement("div");
            line.textContent = text;
            line.className = "terminal-line";
            terminal.appendChild(line);
            terminal.scrollTop = terminal.scrollHeight;
        }

        function runCommand(command) {
            if (command.trim().toLowerCase() === 'clear') {
                terminal.innerHTML = '';
                document.getElementById("commandBar").value = "";
                return;
            }
            fetch('/api/command', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    command: command
                })
            })
            .then(response => {
                if (!response.ok) {
                    if (response.status === 403) {
                        const arg0 = command.split(' ')[0];
                        throw new Error(`Command not allowed: ${arg0}`);
                    }
                    throw new Error(`HTTP error! response: ${response.status} ${response.url}`);
                }
                return response.json();
            })
            .then(data => {
                if (data.error) {
                    appendToTerminal(`Error: ${data.error}`);
                } else {
                    appendToTerminal(data.output);
                }
            })
            .catch(error => {
                appendToTerminal(`Error: ${error.message}`);
            });

            document.getElementById("commandBar").value = "";
        }
    });
</script>

<div data-widget="shell" class="terminal-widget">
    <div class="rounded-lg w-fit h-fit px-3 py-3 backdrop-blur-lg
             shadow-black shadow-2xl font-sans font-extralight">
        <div id="terminal-output" class="terminal-window mb-2 overflow-y-auto"></div>
        <div class="terminal-input-line flex items-center">
            <span class="text-white mr-3">$</span>
            <input type="text"
                   id="commandBar"
                   class="w-[50vw] text-2xl border-none outline-none
                          focus:outline-none focus:border-none focus:ring-0 bg-transparent"
                   autocomplete="off"
                   autocapitalize="off"
                   spellcheck="false"
                   placeholder="Enter a command..."/>
        </div>
    </div>
</div>

<style>
.terminal-widget {
    font-family: monospace;
}

.terminal-window {
    white-space: pre-wrap;
    word-break: break-word;
    font-size: 1rem;
    line-height: 1.4;
    overflow-x: hidden;
    width: 100%;
}

.terminal-line {
    padding: 2px 0;
    width: 100%;
}

.terminal-line:last-child {
    border-bottom: none;
}
</style>
